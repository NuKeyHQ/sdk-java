package xyz.voltawallet.example;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import xyz.voltawallet.VoltaClient;
import xyz.voltawallet.VoltaSdk;
import xyz.voltawallet.model.UserOperation;

import java.util.Arrays;
import java.util.Scanner;

/**
 * An example about using Volta sdk-java for sign and send a user operation.<br>
 * <b>How to run this example</b><br>
 * 1. Run this example and do following the guide
 * 2. Go to <a href="https://mumbai.polygonscan.com/address/WALLET_ADDRESS#internaltx">scan page of a wallet address</a> to see the transaction log.<br>
 */
public class Main {
  private static final String BUNDLE_SERVICE_URL = "https://api-bundler.dev.nukey.fi";

  private static UserOperation userOperations(String input) throws JsonProcessingException {
    final ObjectMapper mapper = new ObjectMapper();
    final ObjectNode json = mapper.createObjectNode();
    Arrays
      .stream(input.split(",")).map(it -> it.split(":"))
      .forEach(entry -> {
        if (entry.length > 1) {
          String key = entry[0].trim();
          json.put(key.substring(0, 1).toLowerCase() + key.substring(1), entry[1].trim().replace("'", ""));
        }
      });
    return mapper.readValue(json.toPrettyString(), UserOperation.class);
  }

  private static String[] scanPrivateKeys(Scanner scanner) {
    System.out.println("1. Please enter your private keys for signing the user operation, separate by comma:");
    return scanner.nextLine().split(",");
  }

  private static UserOperation scanUserOperationInput(Scanner scanner) throws Exception {
    System.out.println("2. Please copy and past the UserOperation generated by the tools in this page \n" +
      "https://nukey.atlassian.net/wiki/spaces/NUKEY/pages/97779713/Testing+ERC4337+Wallet+Actions\n" +
      "end input text by \"done\"");
    StringBuilder usrOpBuilder = new StringBuilder();
    do {
      String line = scanner.nextLine();
      if ("done".equalsIgnoreCase(line.trim())) break;
      usrOpBuilder.append(line);
      usrOpBuilder.append("\n");
    } while (true);
    return userOperations(usrOpBuilder.toString());
  }

  public static void main(String[] args) throws Exception {
    Scanner scanner = new Scanner(System.in);
    VoltaClient client = VoltaSdk.newVoltaClient(BUNDLE_SERVICE_URL);
    String[] privateKeys = scanPrivateKeys(scanner);
    final UserOperation operation = scanUserOperationInput(scanner).buildUpon().setChainId(80001).build();
    System.out.println("Signing and sending the user operation");
    operation.sign(privateKeys);
    final Object result = client.send(operation);
    System.out.println("Send user operation success: " + result);
  }
}
